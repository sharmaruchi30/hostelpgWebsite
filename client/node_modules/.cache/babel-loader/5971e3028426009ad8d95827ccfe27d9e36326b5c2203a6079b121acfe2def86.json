{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\node learn\\\\Pg Hostel Website\\\\client\\\\src\\\\pages\\\\nav pages\\\\AddPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport { ToastContainer } from \"react-toastify\";\n// import * as yup from \"yup\";\nimport Notify from \"../../components/Notify\";\nimport firebase from \"firebase/compat/app\";\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { storage } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddPage = () => {\n  _s();\n  const userId = useSelector(state => state.user._id);\n  const [foodOptions, setFoodOptions] = useState([]);\n  const handleFoodChkbox = e => {\n    const {\n      value,\n      checked\n    } = e.target;\n    if (checked) {\n      // push selected value in list\n      setFoodOptions(prev => [...prev, value]);\n    } else {\n      // remove unchecked value from the list\n      setFoodOptions(prev => prev.filter(x => x !== value));\n    }\n  };\n  const initialValues = {\n    category: \"pg\",\n    no_of_rooms: \"1\",\n    no_of_bathrooms: \"1\",\n    food_categories: foodOptions,\n    image_path: \"\",\n    description: \"\",\n    area: \"\",\n    city: \"\",\n    state: \"\",\n    reviews: \"\"\n  };\n  const foodList = [{\n    value: \"veg\",\n    label: \"Veg\"\n  }, {\n    value: \"nonveg\",\n    label: \"Non Veg\"\n  }, {\n    value: \"jain\",\n    label: \"Jain\"\n  }];\n  const submitData = async data => {\n    try {\n      const res = await fetch(\"http://localhost:3001/house/addhouse/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: data\n      });\n      if (res.ok) {\n        Notify(\"Add Created Successfully\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const handleFormSubmit = async values => {\n    try {\n      let file = values.image_path;\n      var storagePath = \"uploads/\" + file.name;\n      const storageRef = ref(storage, storagePath);\n      const uploadTask = uploadBytesResumable(storageRef, file);\n      uploadTask.on(\"state_changed\", snapshot => {\n        // progrss function ....\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log(\"Upload is \" + progress + \"% done\");\n      }, error => {\n        // error function ....\n        console.log(error);\n      }, () => {\n        // complete function ....\n        getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n          console.log(\"File available at\", downloadURL);\n          console.log(typeof downloadURL);\n          var house = `{\n              \"userId\": \"${userId}\",\n              \"category\": \"${values.category}\",\n              \"no_of_rooms\": \"${values.no_of_rooms}\",\n              \"no_of_bathrooms\": \"${values.no_of_bathrooms}\",\n              \"food_categories\": [\n                  \"${values.food_categories}\"\n              ],\n              \"image_path\": [\n                  \"${downloadURL}\"\n              ],\n              \"description\": \"${values.description}\",\n              \"location\": {\n                  \"area\": \"${values.area}\",\n                  \"city\": \"${values.city}\",\n                  \"state\": \"${values.state}\"\n              },\n              \"reviews\": []\n             }`;\n          submitData(house);\n        });\n      });\n    } catch (e) {\n      console.log(\"poora error\", e);\n    }\n  };\n\n  // const handleFormSubmit = async (values, onsubmitProps) => {\n  //   const toFormData = ((f) => f(f))((h) => (f) => f((x) => h(h)(f)(x)))(\n  //     (f) => (fd) => (pk) => (d) => {\n  //       if (d instanceof Object) {\n  //         Object.keys(d).forEach((k) => {\n  //           const v =\n  //             d[k] === null\n  //               ? \"\"\n  //               : d[k] === true\n  //               ? 1\n  //               : d[k] === false\n  //               ? 0\n  //               : d[k];\n  //           if (pk) k = `${pk}[${k}]`;\n  //           if (\n  //             v instanceof Object &&\n  //             !(v instanceof Date) &&\n  //             !(v instanceof File)\n  //           ) {\n  //             return f(fd)(k)(v);\n  //           } else {\n  //             fd.append(k, v);\n  //           }\n  //         });\n  //       }\n  //       return fd;\n  //     }\n  //   )(new FormData())();\n\n  //   try {\n  //     var form_data = jsonToFormData (jsonForPost, testJSON);\n  //     var house = `{\n  //       \"userId\": \"${userId}\",\n  //       \"category\": \"${values.category}\",\n  //       \"no_of_rooms\": \"${values.no_of_rooms}\",\n  //       \"no_of_bathrooms\": \"${values.no_of_bathrooms}\",\n  //       \"food_categories\": [\n  //           \"${values.food_categories}\"\n  //       ],\n  //       \"image_path\": [\n  //           \"${values.image_path}\"\n  //       ],\n  //       \"description\": \"${values.description}\",\n  //       \"location\": {\n  //           \"area\": \"${values.area}\",\n  //           \"city\": \"${values.city}\",\n  //           \"state\": \"${values.state}\"\n  //       },\n  //       \"reviews\": []\n  //      }`;\n  //     var house = {\n  //       userId: userId,\n  //       category: values.category,\n  //       no_of_rooms: values.no_of_rooms,\n  //       no_of_bathrooms: values.no_of_bathrooms,\n  //       food_categories: [values.food_categories],\n  //       image_path: [values.image_path],\n  //       description: values.description,\n  //       location: {\n  //         area: values.area,\n  //         city: values.city,\n  //         state: values.state,\n  //       },\n  //       reviews: [],\n  //     };\n  //     const formdata = toFormData(house);\n  //     console.log(formdata);\n\n  //     // const formdata = new FormData();\n  //     // formdata.append(\"userId\", userId);\n  //     // formdata.append(\"category\", values.category);\n  //     // formdata.append(\"no_of_rooms\", values.no_of_rooms);\n  //     // formdata.append(\"no_of_bathrooms\", values.no_of_bathrooms);\n  //     // let food = [values.food_categories];\n  //     // formdata.append(\"food_categories\", food);\n  //     // formdata.append(\"image_path\", values.image_path.name);\n  //     // formdata.append(\"description\", values.description);\n  //     // let location = {\n  //     //   area: values.area,\n  //     //   city: values.city,\n  //     //   state: values.state,\n  //     // };\n  //     // formdata.append(\"location\", JSON.stringify(location));\n  //     const res = await fetch(\"http://localhost:3001/house/addhouse/\", {\n  //       method: \"POST\",\n  //       // headers: {\n  //       //   \"Content-Type\": \"application/json\",\n  //       // },\n  //       body: formdata,\n  //     });\n  //     if (res.ok) {\n  //       Notify(\"Add Created Successfully\");\n  //     }\n  //   } catch (e) {\n  //     console.log(\"error\", e);\n  //   }\n  // };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filterhandles\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headText\",\n        children: \"Create Your Own Advertisement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: handleFormSubmit,\n      children: _ref => {\n        let {\n          values,\n          errors,\n          touched,\n          handleBlur,\n          handleSubmit,\n          handleChange,\n          setFieldValue\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            value: values.category,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"PG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Hostel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Flat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: values.no_of_rooms,\n            name: \"no_of_rooms\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: values.no_of_bathrooms,\n            name: \"no_of_bathrooms\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), foodList.map((x, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"lang\",\n              value: x.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), \" \", x.label]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)), \"image\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            value: undefined,\n            name: \"image_path\",\n            onChange: e => setFieldValue(\"image_path\", e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), \"desc\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: values.description,\n            name: \"description\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), \"area\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"area\",\n            value: values.area,\n            name: \"area\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), \"city\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: values.city,\n            name: \"city\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), \"state\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: values.state,\n            name: \"state\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AddPage, \"rl8mcwMDokxrORZDuKjiCjUAmLw=\", false, function () {\n  return [useSelector];\n});\n_c = AddPage;\nexport default AddPage;\nvar _c;\n$RefreshReg$(_c, \"AddPage\");","map":{"version":3,"names":["React","useState","Formik","useSelector","ToastContainer","Notify","firebase","getStorage","ref","uploadBytesResumable","getDownloadURL","storage","jsxDEV","_jsxDEV","Fragment","_Fragment","AddPage","_s","userId","state","user","_id","foodOptions","setFoodOptions","handleFoodChkbox","e","value","checked","target","prev","filter","x","initialValues","category","no_of_rooms","no_of_bathrooms","food_categories","image_path","description","area","city","reviews","foodList","label","submitData","data","res","fetch","method","headers","body","ok","console","log","handleFormSubmit","values","file","storagePath","name","storageRef","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","error","then","downloadURL","house","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","_ref","errors","touched","handleBlur","handleSubmit","handleChange","setFieldValue","onChange","type","map","i","undefined","files","_c","$RefreshReg$"],"sources":["D:/Programming/node learn/Pg Hostel Website/client/src/pages/nav pages/AddPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n// import * as yup from \"yup\";\r\nimport Notify from \"../../components/Notify\";\r\n\r\nimport firebase from \"firebase/compat/app\";\r\nimport {\r\n  getStorage,\r\n  ref,\r\n  uploadBytesResumable,\r\n  getDownloadURL,\r\n} from \"firebase/storage\";\r\nimport { storage } from \"../../firebase\";\r\n\r\nconst AddPage = () => {\r\n  const userId = useSelector((state) => state.user._id);\r\n  const [foodOptions, setFoodOptions] = useState([]);\r\n\r\n  const handleFoodChkbox = (e) => {\r\n    const { value, checked } = e.target;\r\n    if (checked) {\r\n      // push selected value in list\r\n      setFoodOptions((prev) => [...prev, value]);\r\n    } else {\r\n      // remove unchecked value from the list\r\n      setFoodOptions((prev) => prev.filter((x) => x !== value));\r\n    }\r\n  };\r\n  const initialValues = {\r\n    category: \"pg\",\r\n    no_of_rooms: \"1\",\r\n    no_of_bathrooms: \"1\",\r\n    food_categories: foodOptions,\r\n    image_path: \"\",\r\n    description: \"\",\r\n    area: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    reviews: \"\",\r\n  };\r\n\r\n  const foodList = [\r\n    { value: \"veg\", label: \"Veg\" },\r\n    { value: \"nonveg\", label: \"Non Veg\" },\r\n    { value: \"jain\", label: \"Jain\" },\r\n  ];\r\n\r\n  const submitData = async (data) => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:3001/house/addhouse/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: data,\r\n      });\r\n      if (res.ok) {\r\n        Notify(\"Add Created Successfully\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = async (values) => {\r\n    try {\r\n      let file = values.image_path;\r\n      var storagePath = \"uploads/\" + file.name;\r\n\r\n      const storageRef = ref(storage, storagePath);\r\n      const uploadTask = uploadBytesResumable(storageRef, file);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          // progrss function ....\r\n          const progress =\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          console.log(\"Upload is \" + progress + \"% done\");\r\n        },\r\n        (error) => {\r\n          // error function ....\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          // complete function ....\r\n          getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n            console.log(\"File available at\", downloadURL);\r\n            console.log(typeof downloadURL);\r\n            var house = `{\r\n              \"userId\": \"${userId}\",\r\n              \"category\": \"${values.category}\",\r\n              \"no_of_rooms\": \"${values.no_of_rooms}\",\r\n              \"no_of_bathrooms\": \"${values.no_of_bathrooms}\",\r\n              \"food_categories\": [\r\n                  \"${values.food_categories}\"\r\n              ],\r\n              \"image_path\": [\r\n                  \"${downloadURL}\"\r\n              ],\r\n              \"description\": \"${values.description}\",\r\n              \"location\": {\r\n                  \"area\": \"${values.area}\",\r\n                  \"city\": \"${values.city}\",\r\n                  \"state\": \"${values.state}\"\r\n              },\r\n              \"reviews\": []\r\n             }`;\r\n\r\n            submitData(house);\r\n          });\r\n        }\r\n      );\r\n    } catch (e) {\r\n      console.log(\"poora error\", e);\r\n    }\r\n  };\r\n\r\n  // const handleFormSubmit = async (values, onsubmitProps) => {\r\n  //   const toFormData = ((f) => f(f))((h) => (f) => f((x) => h(h)(f)(x)))(\r\n  //     (f) => (fd) => (pk) => (d) => {\r\n  //       if (d instanceof Object) {\r\n  //         Object.keys(d).forEach((k) => {\r\n  //           const v =\r\n  //             d[k] === null\r\n  //               ? \"\"\r\n  //               : d[k] === true\r\n  //               ? 1\r\n  //               : d[k] === false\r\n  //               ? 0\r\n  //               : d[k];\r\n  //           if (pk) k = `${pk}[${k}]`;\r\n  //           if (\r\n  //             v instanceof Object &&\r\n  //             !(v instanceof Date) &&\r\n  //             !(v instanceof File)\r\n  //           ) {\r\n  //             return f(fd)(k)(v);\r\n  //           } else {\r\n  //             fd.append(k, v);\r\n  //           }\r\n  //         });\r\n  //       }\r\n  //       return fd;\r\n  //     }\r\n  //   )(new FormData())();\r\n\r\n  //   try {\r\n  //     var form_data = jsonToFormData (jsonForPost, testJSON);\r\n  //     var house = `{\r\n  //       \"userId\": \"${userId}\",\r\n  //       \"category\": \"${values.category}\",\r\n  //       \"no_of_rooms\": \"${values.no_of_rooms}\",\r\n  //       \"no_of_bathrooms\": \"${values.no_of_bathrooms}\",\r\n  //       \"food_categories\": [\r\n  //           \"${values.food_categories}\"\r\n  //       ],\r\n  //       \"image_path\": [\r\n  //           \"${values.image_path}\"\r\n  //       ],\r\n  //       \"description\": \"${values.description}\",\r\n  //       \"location\": {\r\n  //           \"area\": \"${values.area}\",\r\n  //           \"city\": \"${values.city}\",\r\n  //           \"state\": \"${values.state}\"\r\n  //       },\r\n  //       \"reviews\": []\r\n  //      }`;\r\n  //     var house = {\r\n  //       userId: userId,\r\n  //       category: values.category,\r\n  //       no_of_rooms: values.no_of_rooms,\r\n  //       no_of_bathrooms: values.no_of_bathrooms,\r\n  //       food_categories: [values.food_categories],\r\n  //       image_path: [values.image_path],\r\n  //       description: values.description,\r\n  //       location: {\r\n  //         area: values.area,\r\n  //         city: values.city,\r\n  //         state: values.state,\r\n  //       },\r\n  //       reviews: [],\r\n  //     };\r\n  //     const formdata = toFormData(house);\r\n  //     console.log(formdata);\r\n\r\n  //     // const formdata = new FormData();\r\n  //     // formdata.append(\"userId\", userId);\r\n  //     // formdata.append(\"category\", values.category);\r\n  //     // formdata.append(\"no_of_rooms\", values.no_of_rooms);\r\n  //     // formdata.append(\"no_of_bathrooms\", values.no_of_bathrooms);\r\n  //     // let food = [values.food_categories];\r\n  //     // formdata.append(\"food_categories\", food);\r\n  //     // formdata.append(\"image_path\", values.image_path.name);\r\n  //     // formdata.append(\"description\", values.description);\r\n  //     // let location = {\r\n  //     //   area: values.area,\r\n  //     //   city: values.city,\r\n  //     //   state: values.state,\r\n  //     // };\r\n  //     // formdata.append(\"location\", JSON.stringify(location));\r\n  //     const res = await fetch(\"http://localhost:3001/house/addhouse/\", {\r\n  //       method: \"POST\",\r\n  //       // headers: {\r\n  //       //   \"Content-Type\": \"application/json\",\r\n  //       // },\r\n  //       body: formdata,\r\n  //     });\r\n  //     if (res.ok) {\r\n  //       Notify(\"Add Created Successfully\");\r\n  //     }\r\n  //   } catch (e) {\r\n  //     console.log(\"error\", e);\r\n  //   }\r\n  // };\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <div className=\"filterhandles\">\r\n        <div className=\"headText\">Create Your Own Advertisement</div>\r\n      </div>\r\n      <Formik initialValues={initialValues} onSubmit={handleFormSubmit}>\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleChange,\r\n          setFieldValue,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <select\r\n              name=\"category\"\r\n              value={values.category}\r\n              onChange={handleChange}\r\n            >\r\n              <option>PG</option>\r\n              <option>Hostel</option>\r\n              <option>Flat</option>\r\n              <option>Home</option>\r\n            </select>\r\n            <input\r\n              type=\"number\"\r\n              value={values.no_of_rooms}\r\n              name=\"no_of_rooms\"\r\n              onChange={handleChange}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              value={values.no_of_bathrooms}\r\n              name=\"no_of_bathrooms\"\r\n              onChange={handleChange}\r\n            />\r\n            {foodList.map((x, i) => (\r\n              <label key={i}>\r\n                <input type=\"checkbox\" name=\"lang\" value={x.value} /> {x.label}\r\n              </label>\r\n            ))}\r\n            {/* image\r\n            <input\r\n              type=\"text\"\r\n              value={values.image_path}\r\n              name=\"image_path\"\r\n              onChange={handleChange}\r\n            /> */}\r\n            image\r\n            <input\r\n              type=\"file\"\r\n              value={undefined}\r\n              name=\"image_path\"\r\n              onChange={(e) => setFieldValue(\"image_path\", e.target.files[0])}\r\n            />\r\n            desc\r\n            <input\r\n              type=\"text\"\r\n              value={values.description}\r\n              name=\"description\"\r\n              onChange={handleChange}\r\n            />\r\n            area\r\n            <input\r\n              type=\"area\"\r\n              value={values.area}\r\n              name=\"area\"\r\n              onChange={handleChange}\r\n            />\r\n            city\r\n            <input\r\n              type=\"text\"\r\n              value={values.city}\r\n              name=\"city\"\r\n              onChange={handleChange}\r\n            />\r\n            state\r\n            <input\r\n              type=\"text\"\r\n              value={values.state}\r\n              name=\"state\"\r\n              onChange={handleChange}\r\n            />\r\n            <button type=\"submit\">submit</button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddPage;\r\n"],"mappings":"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;AAC7C,gCAAgCsB,MAAM,CAACrB,WAAY;AACnD,oCAAoCqB,MAAM,CAACpB,eAAgB;AAC3D;AACA,qBAAqBoB,MAAM,CAACnB,eAAgB;AAC5C;AACA;AACA,qBAAqBgC,WAAY;AACjC;AACA,gCAAgCb,MAAM,CAACjB,WAAY;AACnD;AACA,6BAA6BiB,MAAM,CAAChB,IAAK;AACzC,6BAA6BgB,MAAM,CAACf,IAAK;AACzC,8BAA8Be,MAAM,CAACpC,KAAM;AAC3C;AACA;AACA,eAAe;UAEHyB,UAAU,CAACyB,KAAK,CAAC;QACnB,CAAC,CAAC;MACJ,CACF,CAAC;IACH,CAAC,CAAC,OAAO5C,CAAC,EAAE;MACV2B,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE5B,CAAC,CAAC;IAC/B;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACEZ,OAAA,CAAAE,SAAA;IAAAuD,QAAA,gBACEzD,OAAA,CAACT,cAAc;MAAAmE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClB7D,OAAA;MAAK8D,SAAS,EAAC,eAAe;MAAAL,QAAA,eAC5BzD,OAAA;QAAK8D,SAAS,EAAC,UAAU;QAAAL,QAAA,EAAC;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}